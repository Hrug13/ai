graph = {
  '1' : ['2','3'],
  '2' : ['4', '5'],
  '3' : ['6','7'],
  '4' : ['2'],
  '5' : ['2'],
  '6' : ['3'],
  '7' : ['3'],
}

visited = [] # List to keep track of visited nodes.
queue = []     #Initialize a queue

def bfs(visited, graph, node):
    visited.append(node)
    queue.append(node)
    while queue:
        s = queue.pop(0)
    
        print (s, end = " ") 

        for neighbour in graph[s]:
            if neighbour not in visited:
                visited.append(neighbour)
                queue.append(neighbour)

# Driver Code
print("Traversal using BFS:")
bfs(visited, graph, '1')
